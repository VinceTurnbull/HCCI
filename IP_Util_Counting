with claims_table as(
select *
FROM "testdb"."vt_sample_claimants_adddsc"),


/*****************Inpatient ********************/

-- Would like to revise to do without Admit_date in key
add_IP_key as (
select *
, (case when major_service_category = 'Inpatient Facility' then  concat(cast(admit_date as varchar), member_ssn, dsc_with_hierarchy) 
   else NULL end) as IP_unique_key
from claims_table 
),


IP_Enc_Assignment as (
select IP_unique_key
, sum(allowed_amount) as allowed 
, (case when (IP_unique_key in ('',' ') or IP_unique_key is NULL) then NULL
when sum(allowed_amount) > 0 then 1 
when sum(allowed_amount) < 0 then -1 
else 0 end) as IP_enc_assignment
from add_IP_key 
group by 1),


Rank_IP_Rows as (
select * 
, (row_number() over (partition by IP_unique_key ORDER BY service_from_date asc) ) AS IP_ENC_ROW_RANK
, (min(service_from_date) over (partition by IP_unique_key ) ) AS COH_ADMIT_DATE
, (max(service_to_date) over (partition by IP_unique_key ) ) AS COH_DISCHARGE_DATE
from add_IP_key
where major_service_category = 'Inpatient Facility'),



add_Enc_Service_Counts as (
select a.*
, (case when b.IP_enc_assignment = 1 then 1
   when b.IP_enc_assignment = -1 then -1
   else 0 end ) as Service_Count
, (case when b.IP_enc_assignment = 1 then 1 else 0 end ) as Reversal_Flag
, (case when a.Encounter_Count is not NULL then date_diff('day', a.COH_ADMIT_DATE ,a.COH_DISCHARGE_DATE ) 
   else NULL end) as COH_DAYS
from (
select a.*
, b.IP_enc_assignment as Encounter_Count
from Rank_IP_Rows a
left join IP_Enc_Assignment b
on a.IP_unique_key = b.IP_unique_key
and a.IP_ENC_ROW_RANK = 1) a
left join IP_Enc_Assignment b
on a.IP_unique_key = b.IP_unique_key )




